{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst days = document.querySelector(\"[data-days]\");\nconst hours = document.querySelector(\"[data-hours]\");\nconst minutes = document.querySelector(\"[data-minutes]\");\nconst seconds = document.querySelector(\"[data-seconds]\");\nconst dateInput = document.querySelector(\"#datetime-picker\")\nlet userSelectedDate = null;\nlet inetrvalID = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0].getTime()\n        if (userSelectedDate <= Date.now()) {\n            iziToast.show({\n            color: \"red\",\n            position: \"topCenter\",\n            message: \"Please choose a date in the future\",\n            progressBar: false,\n            })\n            startBtn.setAttribute(\"disabled\", \"true\")\n        } else {\n            startBtn.removeAttribute(\"disabled\")\n        }\n        return userSelectedDate\n        \n  },\n};\n\nconst calendar = flatpickr(dateInput, options)\nstartBtn.addEventListener(\"click\", timer)\n\n\nfunction timer () {\n    const initDate = userSelectedDate;\n    inetrvalID = setInterval(() => {\n        const currentTime = Date.now();\n        const diff = initDate - currentTime;\n        const DiffTime = formatTime(diff)\n        if (diff < 1000) clearInterval(inetrvalID);\n        for (let i = 0; i < 4; i++){\n            days.textContent = DiffTime[0];\n            hours.textContent = DiffTime[1];\n            minutes.textContent = DiffTime[2];\n            seconds.textContent = DiffTime[3];\n        }\n    }, 1000)\n    startBtn.setAttribute(\"disabled\", \"true\")\n    dateInput.setAttribute(\"disabled\", \"true\")\n    \n}\n\nconst formatTime = milliseconds => {\n    const seconds = Math.floor((milliseconds / 1000) % 60);\n    const minutes = Math.floor((milliseconds / 1000 / 60) % 60);\n    const hours = Math.floor((milliseconds / 1000 / 60 / 60) % 24);\n    const days = Math.floor((milliseconds / 1000 / 60 / 60 / 24) % 365);\n\n    return [\n        days.toString().padStart(2, \"0\"),\n        hours.toString().padStart(2, \"0\"),\n        minutes.toString().padStart(2, \"0\"),\n        seconds.toString().padStart(2, \"0\")\n    ]\n}\n\n\n"],"names":["startBtn","days","hours","minutes","seconds","dateInput","userSelectedDate","inetrvalID","options","selectedDates","iziToast","flatpickr","timer","initDate","currentTime","diff","DiffTime","formatTime","i","milliseconds"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAY,SAAS,cAAc,kBAAkB,EAC3D,IAAIC,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACf,gBAAiB,EACjB,QAAQC,EAAe,CACnB,OAAAH,EAAmBG,EAAc,CAAC,EAAE,QAAS,EACzCH,GAAoB,KAAK,OACzBI,EAAS,KAAK,CACd,MAAO,MACP,SAAU,YACV,QAAS,qCACT,YAAa,EACzB,CAAa,EACDV,EAAS,aAAa,WAAY,MAAM,GAExCA,EAAS,gBAAgB,UAAU,EAEhCM,CAEZ,CACH,EAEiBK,EAAUN,EAAWG,CAAO,EAC7CR,EAAS,iBAAiB,QAASY,CAAK,EAGxC,SAASA,GAAS,CACd,MAAMC,EAAWP,EACjBC,EAAa,YAAY,IAAM,CAC3B,MAAMO,EAAc,KAAK,MACnBC,EAAOF,EAAWC,EAClBE,EAAWC,EAAWF,CAAI,EAC5BA,EAAO,KAAM,cAAcR,CAAU,EACzC,QAASW,EAAI,EAAGA,EAAI,EAAGA,IACnBjB,EAAK,YAAce,EAAS,CAAC,EAC7Bd,EAAM,YAAcc,EAAS,CAAC,EAC9Bb,EAAQ,YAAca,EAAS,CAAC,EAChCZ,EAAQ,YAAcY,EAAS,CAAC,CAEvC,EAAE,GAAI,EACPhB,EAAS,aAAa,WAAY,MAAM,EACxCK,EAAU,aAAa,WAAY,MAAM,CAE7C,CAEA,MAAMY,EAAaE,GAAgB,CAC/B,MAAMf,EAAU,KAAK,MAAOe,EAAe,IAAQ,EAAE,EAC/ChB,EAAU,KAAK,MAAOgB,EAAe,IAAO,GAAM,EAAE,EACpDjB,EAAQ,KAAK,MAAOiB,EAAe,IAAO,GAAK,GAAM,EAAE,EAG7D,MAAO,CAFM,KAAK,MAAOA,EAAe,IAAO,GAAK,GAAK,GAAM,GAAG,EAGzD,SAAU,EAAC,SAAS,EAAG,GAAG,EAC/BjB,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAChCC,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAClCC,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CACrC,CACL"}